# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule PgQuery.SQLValueFunctionOp do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :SQLVALUE_FUNCTION_OP_UNDEFINED
    def default() do
      :SQLVALUE_FUNCTION_OP_UNDEFINED
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:SQLVALUE_FUNCTION_OP_UNDEFINED) do
    0
  end

  def encode(:SVFOP_CURRENT_DATE) do
    1
  end

  def encode(:SVFOP_CURRENT_TIME) do
    2
  end

  def encode(:SVFOP_CURRENT_TIME_N) do
    3
  end

  def encode(:SVFOP_CURRENT_TIMESTAMP) do
    4
  end

  def encode(:SVFOP_CURRENT_TIMESTAMP_N) do
    5
  end

  def encode(:SVFOP_LOCALTIME) do
    6
  end

  def encode(:SVFOP_LOCALTIME_N) do
    7
  end

  def encode(:SVFOP_LOCALTIMESTAMP) do
    8
  end

  def encode(:SVFOP_LOCALTIMESTAMP_N) do
    9
  end

  def encode(:SVFOP_CURRENT_ROLE) do
    10
  end

  def encode(:SVFOP_CURRENT_USER) do
    11
  end

  def encode(:SVFOP_USER) do
    12
  end

  def encode(:SVFOP_SESSION_USER) do
    13
  end

  def encode(:SVFOP_CURRENT_CATALOG) do
    14
  end

  def encode(:SVFOP_CURRENT_SCHEMA) do
    15
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :SQLVALUE_FUNCTION_OP_UNDEFINED
  end

  def decode(1) do
    :SVFOP_CURRENT_DATE
  end

  def decode(2) do
    :SVFOP_CURRENT_TIME
  end

  def decode(3) do
    :SVFOP_CURRENT_TIME_N
  end

  def decode(4) do
    :SVFOP_CURRENT_TIMESTAMP
  end

  def decode(5) do
    :SVFOP_CURRENT_TIMESTAMP_N
  end

  def decode(6) do
    :SVFOP_LOCALTIME
  end

  def decode(7) do
    :SVFOP_LOCALTIME_N
  end

  def decode(8) do
    :SVFOP_LOCALTIMESTAMP
  end

  def decode(9) do
    :SVFOP_LOCALTIMESTAMP_N
  end

  def decode(10) do
    :SVFOP_CURRENT_ROLE
  end

  def decode(11) do
    :SVFOP_CURRENT_USER
  end

  def decode(12) do
    :SVFOP_USER
  end

  def decode(13) do
    :SVFOP_SESSION_USER
  end

  def decode(14) do
    :SVFOP_CURRENT_CATALOG
  end

  def decode(15) do
    :SVFOP_CURRENT_SCHEMA
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :SQLVALUE_FUNCTION_OP_UNDEFINED},
      {1, :SVFOP_CURRENT_DATE},
      {2, :SVFOP_CURRENT_TIME},
      {3, :SVFOP_CURRENT_TIME_N},
      {4, :SVFOP_CURRENT_TIMESTAMP},
      {5, :SVFOP_CURRENT_TIMESTAMP_N},
      {6, :SVFOP_LOCALTIME},
      {7, :SVFOP_LOCALTIME_N},
      {8, :SVFOP_LOCALTIMESTAMP},
      {9, :SVFOP_LOCALTIMESTAMP_N},
      {10, :SVFOP_CURRENT_ROLE},
      {11, :SVFOP_CURRENT_USER},
      {12, :SVFOP_USER},
      {13, :SVFOP_SESSION_USER},
      {14, :SVFOP_CURRENT_CATALOG},
      {15, :SVFOP_CURRENT_SCHEMA}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:SQLVALUE_FUNCTION_OP_UNDEFINED) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_DATE) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_TIME) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_TIME_N) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_TIMESTAMP) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_TIMESTAMP_N) do
      true
    end

    def has_constant?(:SVFOP_LOCALTIME) do
      true
    end

    def has_constant?(:SVFOP_LOCALTIME_N) do
      true
    end

    def has_constant?(:SVFOP_LOCALTIMESTAMP) do
      true
    end

    def has_constant?(:SVFOP_LOCALTIMESTAMP_N) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_ROLE) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_USER) do
      true
    end

    def has_constant?(:SVFOP_USER) do
      true
    end

    def has_constant?(:SVFOP_SESSION_USER) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_CATALOG) do
      true
    end

    def has_constant?(:SVFOP_CURRENT_SCHEMA) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
