# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule PgQuery.WCOKind do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :WCOKIND_UNDEFINED
    def default() do
      :WCOKIND_UNDEFINED
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:WCOKIND_UNDEFINED) do
    0
  end

  def encode(:WCO_VIEW_CHECK) do
    1
  end

  def encode(:WCO_RLS_INSERT_CHECK) do
    2
  end

  def encode(:WCO_RLS_UPDATE_CHECK) do
    3
  end

  def encode(:WCO_RLS_CONFLICT_CHECK) do
    4
  end

  def encode(:WCO_RLS_MERGE_UPDATE_CHECK) do
    5
  end

  def encode(:WCO_RLS_MERGE_DELETE_CHECK) do
    6
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :WCOKIND_UNDEFINED
  end

  def decode(1) do
    :WCO_VIEW_CHECK
  end

  def decode(2) do
    :WCO_RLS_INSERT_CHECK
  end

  def decode(3) do
    :WCO_RLS_UPDATE_CHECK
  end

  def decode(4) do
    :WCO_RLS_CONFLICT_CHECK
  end

  def decode(5) do
    :WCO_RLS_MERGE_UPDATE_CHECK
  end

  def decode(6) do
    :WCO_RLS_MERGE_DELETE_CHECK
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :WCOKIND_UNDEFINED},
      {1, :WCO_VIEW_CHECK},
      {2, :WCO_RLS_INSERT_CHECK},
      {3, :WCO_RLS_UPDATE_CHECK},
      {4, :WCO_RLS_CONFLICT_CHECK},
      {5, :WCO_RLS_MERGE_UPDATE_CHECK},
      {6, :WCO_RLS_MERGE_DELETE_CHECK}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:WCOKIND_UNDEFINED) do
      true
    end

    def has_constant?(:WCO_VIEW_CHECK) do
      true
    end

    def has_constant?(:WCO_RLS_INSERT_CHECK) do
      true
    end

    def has_constant?(:WCO_RLS_UPDATE_CHECK) do
      true
    end

    def has_constant?(:WCO_RLS_CONFLICT_CHECK) do
      true
    end

    def has_constant?(:WCO_RLS_MERGE_UPDATE_CHECK) do
      true
    end

    def has_constant?(:WCO_RLS_MERGE_DELETE_CHECK) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
