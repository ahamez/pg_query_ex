# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule PgQuery.GrantTargetType do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :GRANT_TARGET_TYPE_UNDEFINED
    def default() do
      :GRANT_TARGET_TYPE_UNDEFINED
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:GRANT_TARGET_TYPE_UNDEFINED) do
    0
  end

  def encode(:ACL_TARGET_OBJECT) do
    1
  end

  def encode(:ACL_TARGET_ALL_IN_SCHEMA) do
    2
  end

  def encode(:ACL_TARGET_DEFAULTS) do
    3
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :GRANT_TARGET_TYPE_UNDEFINED
  end

  def decode(1) do
    :ACL_TARGET_OBJECT
  end

  def decode(2) do
    :ACL_TARGET_ALL_IN_SCHEMA
  end

  def decode(3) do
    :ACL_TARGET_DEFAULTS
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :GRANT_TARGET_TYPE_UNDEFINED},
      {1, :ACL_TARGET_OBJECT},
      {2, :ACL_TARGET_ALL_IN_SCHEMA},
      {3, :ACL_TARGET_DEFAULTS}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:GRANT_TARGET_TYPE_UNDEFINED) do
      true
    end

    def has_constant?(:ACL_TARGET_OBJECT) do
      true
    end

    def has_constant?(:ACL_TARGET_ALL_IN_SCHEMA) do
      true
    end

    def has_constant?(:ACL_TARGET_DEFAULTS) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
