# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule PgQuery.BoolTestType do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :BOOL_TEST_TYPE_UNDEFINED
    def default() do
      :BOOL_TEST_TYPE_UNDEFINED
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:BOOL_TEST_TYPE_UNDEFINED) do
    0
  end

  def encode(:IS_TRUE) do
    1
  end

  def encode(:IS_NOT_TRUE) do
    2
  end

  def encode(:IS_FALSE) do
    3
  end

  def encode(:IS_NOT_FALSE) do
    4
  end

  def encode(:IS_UNKNOWN) do
    5
  end

  def encode(:IS_NOT_UNKNOWN) do
    6
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :BOOL_TEST_TYPE_UNDEFINED
  end

  def decode(1) do
    :IS_TRUE
  end

  def decode(2) do
    :IS_NOT_TRUE
  end

  def decode(3) do
    :IS_FALSE
  end

  def decode(4) do
    :IS_NOT_FALSE
  end

  def decode(5) do
    :IS_UNKNOWN
  end

  def decode(6) do
    :IS_NOT_UNKNOWN
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :BOOL_TEST_TYPE_UNDEFINED},
      {1, :IS_TRUE},
      {2, :IS_NOT_TRUE},
      {3, :IS_FALSE},
      {4, :IS_NOT_FALSE},
      {5, :IS_UNKNOWN},
      {6, :IS_NOT_UNKNOWN}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:BOOL_TEST_TYPE_UNDEFINED) do
      true
    end

    def has_constant?(:IS_TRUE) do
      true
    end

    def has_constant?(:IS_NOT_TRUE) do
      true
    end

    def has_constant?(:IS_FALSE) do
      true
    end

    def has_constant?(:IS_NOT_FALSE) do
      true
    end

    def has_constant?(:IS_UNKNOWN) do
      true
    end

    def has_constant?(:IS_NOT_UNKNOWN) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
