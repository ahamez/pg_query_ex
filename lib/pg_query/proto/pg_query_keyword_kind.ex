# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule PgQuery.KeywordKind do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :NO_KEYWORD
    def default() do
      :NO_KEYWORD
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:NO_KEYWORD) do
    0
  end

  def encode(:UNRESERVED_KEYWORD) do
    1
  end

  def encode(:COL_NAME_KEYWORD) do
    2
  end

  def encode(:TYPE_FUNC_NAME_KEYWORD) do
    3
  end

  def encode(:RESERVED_KEYWORD) do
    4
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :NO_KEYWORD
  end

  def decode(1) do
    :UNRESERVED_KEYWORD
  end

  def decode(2) do
    :COL_NAME_KEYWORD
  end

  def decode(3) do
    :TYPE_FUNC_NAME_KEYWORD
  end

  def decode(4) do
    :RESERVED_KEYWORD
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :NO_KEYWORD},
      {1, :UNRESERVED_KEYWORD},
      {2, :COL_NAME_KEYWORD},
      {3, :TYPE_FUNC_NAME_KEYWORD},
      {4, :RESERVED_KEYWORD}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:NO_KEYWORD) do
      true
    end

    def has_constant?(:UNRESERVED_KEYWORD) do
      true
    end

    def has_constant?(:COL_NAME_KEYWORD) do
      true
    end

    def has_constant?(:TYPE_FUNC_NAME_KEYWORD) do
      true
    end

    def has_constant?(:RESERVED_KEYWORD) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
