# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule PgQuery.TransactionStmtKind do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :TRANSACTION_STMT_KIND_UNDEFINED
    def default() do
      :TRANSACTION_STMT_KIND_UNDEFINED
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:TRANSACTION_STMT_KIND_UNDEFINED) do
    0
  end

  def encode(:TRANS_STMT_BEGIN) do
    1
  end

  def encode(:TRANS_STMT_START) do
    2
  end

  def encode(:TRANS_STMT_COMMIT) do
    3
  end

  def encode(:TRANS_STMT_ROLLBACK) do
    4
  end

  def encode(:TRANS_STMT_SAVEPOINT) do
    5
  end

  def encode(:TRANS_STMT_RELEASE) do
    6
  end

  def encode(:TRANS_STMT_ROLLBACK_TO) do
    7
  end

  def encode(:TRANS_STMT_PREPARE) do
    8
  end

  def encode(:TRANS_STMT_COMMIT_PREPARED) do
    9
  end

  def encode(:TRANS_STMT_ROLLBACK_PREPARED) do
    10
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :TRANSACTION_STMT_KIND_UNDEFINED
  end

  def decode(1) do
    :TRANS_STMT_BEGIN
  end

  def decode(2) do
    :TRANS_STMT_START
  end

  def decode(3) do
    :TRANS_STMT_COMMIT
  end

  def decode(4) do
    :TRANS_STMT_ROLLBACK
  end

  def decode(5) do
    :TRANS_STMT_SAVEPOINT
  end

  def decode(6) do
    :TRANS_STMT_RELEASE
  end

  def decode(7) do
    :TRANS_STMT_ROLLBACK_TO
  end

  def decode(8) do
    :TRANS_STMT_PREPARE
  end

  def decode(9) do
    :TRANS_STMT_COMMIT_PREPARED
  end

  def decode(10) do
    :TRANS_STMT_ROLLBACK_PREPARED
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :TRANSACTION_STMT_KIND_UNDEFINED},
      {1, :TRANS_STMT_BEGIN},
      {2, :TRANS_STMT_START},
      {3, :TRANS_STMT_COMMIT},
      {4, :TRANS_STMT_ROLLBACK},
      {5, :TRANS_STMT_SAVEPOINT},
      {6, :TRANS_STMT_RELEASE},
      {7, :TRANS_STMT_ROLLBACK_TO},
      {8, :TRANS_STMT_PREPARE},
      {9, :TRANS_STMT_COMMIT_PREPARED},
      {10, :TRANS_STMT_ROLLBACK_PREPARED}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:TRANSACTION_STMT_KIND_UNDEFINED) do
      true
    end

    def has_constant?(:TRANS_STMT_BEGIN) do
      true
    end

    def has_constant?(:TRANS_STMT_START) do
      true
    end

    def has_constant?(:TRANS_STMT_COMMIT) do
      true
    end

    def has_constant?(:TRANS_STMT_ROLLBACK) do
      true
    end

    def has_constant?(:TRANS_STMT_SAVEPOINT) do
      true
    end

    def has_constant?(:TRANS_STMT_RELEASE) do
      true
    end

    def has_constant?(:TRANS_STMT_ROLLBACK_TO) do
      true
    end

    def has_constant?(:TRANS_STMT_PREPARE) do
      true
    end

    def has_constant?(:TRANS_STMT_COMMIT_PREPARED) do
      true
    end

    def has_constant?(:TRANS_STMT_ROLLBACK_PREPARED) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
