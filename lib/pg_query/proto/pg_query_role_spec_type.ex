# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule PgQuery.RoleSpecType do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :ROLE_SPEC_TYPE_UNDEFINED
    def default() do
      :ROLE_SPEC_TYPE_UNDEFINED
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:ROLE_SPEC_TYPE_UNDEFINED) do
    0
  end

  def encode(:ROLESPEC_CSTRING) do
    1
  end

  def encode(:ROLESPEC_CURRENT_ROLE) do
    2
  end

  def encode(:ROLESPEC_CURRENT_USER) do
    3
  end

  def encode(:ROLESPEC_SESSION_USER) do
    4
  end

  def encode(:ROLESPEC_PUBLIC) do
    5
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :ROLE_SPEC_TYPE_UNDEFINED
  end

  def decode(1) do
    :ROLESPEC_CSTRING
  end

  def decode(2) do
    :ROLESPEC_CURRENT_ROLE
  end

  def decode(3) do
    :ROLESPEC_CURRENT_USER
  end

  def decode(4) do
    :ROLESPEC_SESSION_USER
  end

  def decode(5) do
    :ROLESPEC_PUBLIC
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :ROLE_SPEC_TYPE_UNDEFINED},
      {1, :ROLESPEC_CSTRING},
      {2, :ROLESPEC_CURRENT_ROLE},
      {3, :ROLESPEC_CURRENT_USER},
      {4, :ROLESPEC_SESSION_USER},
      {5, :ROLESPEC_PUBLIC}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:ROLE_SPEC_TYPE_UNDEFINED) do
      true
    end

    def has_constant?(:ROLESPEC_CSTRING) do
      true
    end

    def has_constant?(:ROLESPEC_CURRENT_ROLE) do
      true
    end

    def has_constant?(:ROLESPEC_CURRENT_USER) do
      true
    end

    def has_constant?(:ROLESPEC_SESSION_USER) do
      true
    end

    def has_constant?(:ROLESPEC_PUBLIC) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
